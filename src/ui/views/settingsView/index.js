// –í–∏–¥ –Ω–∞—Å—Ç—Ä–æ–µ–∫
class SettingsView {
    constructor() {
        this.settings = {
            storageAdapter: 'local',
            imageSource: 'bricklink',
            theme: 'light',
            autoSave: true,
            gridSize: 'medium',
            notifications: true
        };
    }

    render() {
        const container = document.getElementById('settings-content');
        if (!container) return;

        container.innerHTML = this.renderSettingsInterface();
        this.setupEventListeners();
        this.loadSettings();
    }

    renderSettingsInterface() {
        return `
            <div class="settings-section">
                <h3>–•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö</h3>
                <p>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</p>
                <div class="form-group">
                    <label class="form-label">–ê–¥–∞–ø—Ç–µ—Ä —Ö—Ä–∞–Ω–µ–Ω–∏—è</label>
                    <select class="form-select" id="storage-adapter">
                        <option value="local">LocalStorage (–±—ã—Å—Ç—Ä–æ, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ)</option>
                        <option value="idb">IndexedDB (–±–æ–ª—å—à–µ –º–µ—Å—Ç–∞)</option>
                        <option value="firebase">Firebase (—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è)</option>
                    </select>
                </div>
                <div class="setting-description">
                    <p><strong>LocalStorage:</strong> –î–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ. –ë—ã—Å—Ç—Ä–æ, –Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ –ø–æ –æ–±—ä–µ–º—É.</p>
                    <p><strong>IndexedDB:</strong> –ë–æ–ª—å—à–µ –º–µ—Å—Ç–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –±–æ–ª—å—à–∏–µ –æ–±—ä–µ–º—ã –¥–∞–Ω–Ω—ã—Ö.</p>
                    <p><strong>Firebase:</strong> –û–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π –º–µ–∂–¥—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏.</p>
                </div>
            </div>

            <div class="settings-section">
                <h3>–ò—Å—Ç–æ—á–Ω–∏–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</h3>
                <p>–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–µ—Ç–∞–ª–µ–π LEGO</p>
                <div class="form-group">
                    <label class="form-label">–ò—Å—Ç–æ—á–Ω–∏–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</label>
                    <select class="form-select" id="image-source">
                        <option value="bricklink">BrickLink</option>
                        <option value="rebrickable">Rebrickable</option>
                        <option value="local">–õ–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã</option>
                    </select>
                </div>
                <div class="setting-description">
                    <p><strong>BrickLink:</strong> –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å BrickLink.com</p>
                    <p><strong>Rebrickable:</strong> –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å Rebrickable.com</p>
                    <p><strong>–õ–æ–∫–∞–ª—å–Ω—ã–µ:</strong> –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</p>
                </div>
            </div>

            <div class="settings-section">
                <h3>–í–Ω–µ—à–Ω–∏–π –≤–∏–¥</h3>
                <p>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏ —Ç–µ–º—ã</p>
                <div class="form-group">
                    <label class="form-label">–¢–µ–º–∞</label>
                    <select class="form-select" id="theme-select">
                        <option value="light">–°–≤–µ—Ç–ª–∞—è</option>
                        <option value="dark">–¢—ë–º–Ω–∞—è</option>
                        <option value="auto">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</option>
                    </select>
                </div>
                <div class="form-group">
                    <label class="form-label">–†–∞–∑–º–µ—Ä —Å–µ—Ç–∫–∏</label>
                    <select class="form-select" id="grid-size">
                        <option value="small">–ú–∞–ª–µ–Ω—å–∫–∏–π (40px)</option>
                        <option value="medium">–°—Ä–µ–¥–Ω–∏–π (60px)</option>
                        <option value="large">–ë–æ–ª—å—à–æ–π (80px)</option>
                    </select>
                </div>
            </div>

            <div class="settings-section">
                <h3>–ü–æ–≤–µ–¥–µ–Ω–∏–µ</h3>
                <p>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</p>
                <div class="form-group">
                    <label class="checkbox-label">
                        <input type="checkbox" id="auto-save" checked>
                        –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
                    </label>
                </div>
                <div class="form-group">
                    <label class="checkbox-label">
                        <input type="checkbox" id="notifications" checked>
                        –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                    </label>
                </div>
                <div class="form-group">
                    <label class="checkbox-label">
                        <input type="checkbox" id="confirm-delete">
                        –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ
                    </label>
                </div>
            </div>

            <div class="settings-section">
                <h3>–î–∞–Ω–Ω—ã–µ</h3>
                <p>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</p>
                <div class="settings-actions">
                    <button class="btn btn-outline" id="export-settings-btn">–≠–∫—Å–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫</button>
                    <button class="btn btn-outline" id="import-settings-btn">–ò–º–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫</button>
                    <button class="btn btn-outline" id="reset-settings-btn">–°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</button>
                </div>
                <div class="settings-actions danger-zone">
                    <h4>–°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö</h4>
                    <p>–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é</p>
                    <button class="btn btn-danger" id="clear-all-data-btn">üîÑ –°–±—Ä–æ—Å–∏—Ç—å –∫ —É–º–æ–ª—á–∞–Ω–∏—è–º</button>
                </div>
            </div>

            <div class="settings-section">
                <h3>–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏</h3>
                <div class="app-info">
                    <p><strong>LEGO Storage Mapper</strong> v1.0.0</p>
                    <p>–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π LEGO –¥–µ—Ç–∞–ª–µ–π</p>
                    <p>–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è —Å–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –¥–µ—Ç–∞–ª–µ–π</p>
                </div>
            </div>
        `;
    }

    setupEventListeners() {
        // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        document.getElementById('storage-adapter')?.addEventListener('change', (e) => {
            this.updateSetting('storageAdapter', e.target.value);
        });

        document.getElementById('image-source')?.addEventListener('change', (e) => {
            this.updateSetting('imageSource', e.target.value);
        });

        document.getElementById('theme-select')?.addEventListener('change', (e) => {
            this.updateSetting('theme', e.target.value);
            this.applyTheme(e.target.value);
        });

        document.getElementById('grid-size')?.addEventListener('change', (e) => {
            this.updateSetting('gridSize', e.target.value);
            this.applyGridSize(e.target.value);
        });

        document.getElementById('auto-save')?.addEventListener('change', (e) => {
            this.updateSetting('autoSave', e.target.checked);
        });

        document.getElementById('notifications')?.addEventListener('change', (e) => {
            this.updateSetting('notifications', e.target.checked);
        });

        document.getElementById('confirm-delete')?.addEventListener('change', (e) => {
            this.updateSetting('confirmDelete', e.target.checked);
        });

        // –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        document.getElementById('export-settings-btn')?.addEventListener('click', () => {
            this.exportSettings();
        });

        document.getElementById('import-settings-btn')?.addEventListener('click', () => {
            this.importSettings();
        });

        document.getElementById('reset-settings-btn')?.addEventListener('click', () => {
            this.resetSettings();
        });

        document.getElementById('clear-all-data-btn')?.addEventListener('click', () => {
            this.clearAllData();
        });
    }

    loadSettings() {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ localStorage
        const savedSettings = localStorage.getItem('lego-storage-settings');
        if (savedSettings) {
            try {
                this.settings = { ...this.settings, ...JSON.parse(savedSettings) };
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
            }
        }

        // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
        Object.keys(this.settings).forEach(key => {
            const element = document.getElementById(this.getSettingElementId(key));
            if (element) {
                if (element.type === 'checkbox') {
                    element.checked = this.settings[key];
                } else {
                    element.value = this.settings[key];
                }
            }
        });

        // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
        this.applyTheme(this.settings.theme);
        this.applyGridSize(this.settings.gridSize);
    }

    getSettingElementId(key) {
        const mapping = {
            'storageAdapter': 'storage-adapter',
            'imageSource': 'image-source',
            'theme': 'theme-select',
            'gridSize': 'grid-size',
            'autoSave': 'auto-save',
            'notifications': 'notifications',
            'confirmDelete': 'confirm-delete'
        };
        return mapping[key] || key;
    }

    updateSetting(key, value) {
        this.settings[key] = value;
        this.saveSettings();
        
        if (window.app) {
            window.app.showNotification('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞', 'success');
        }
    }

    saveSettings() {
        try {
            localStorage.setItem('lego-storage-settings', JSON.stringify(this.settings));
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
            if (window.app) {
                window.app.showNotification('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫', 'error');
            }
        }
    }

    applyTheme(theme) {
        const body = document.body;
        
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∫–ª–∞—Å—Å—ã —Ç–µ–º—ã
        body.classList.remove('theme-light', 'theme-dark', 'theme-auto');
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—É—é —Ç–µ–º—É
        switch (theme) {
            case 'light':
                body.classList.add('theme-light');
                break;
            case 'dark':
                body.classList.add('theme-dark');
                break;
            case 'auto':
                body.classList.add('theme-auto');
                break;
        }
    }

    applyGridSize(size) {
        const root = document.documentElement;
        
        switch (size) {
            case 'small':
                root.style.setProperty('--grid-cell-size', '40px');
                break;
            case 'medium':
                root.style.setProperty('--grid-cell-size', '60px');
                break;
            case 'large':
                root.style.setProperty('--grid-cell-size', '80px');
                break;
        }
    }

    exportSettings() {
        const settingsData = {
            settings: this.settings,
            exportedAt: new Date().toISOString(),
            version: '1.0'
        };
        
        const blob = new Blob([JSON.stringify(settingsData, null, 2)], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'lego-storage-settings.json';
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
        
        if (window.app) {
            window.app.showNotification('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã', 'success');
        }
    }

    importSettings() {
        const input = document.createElement('input');
        input.type = 'file';
        input.accept = '.json';
        input.onchange = (e) => {
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = (e) => {
                    try {
                        const data = JSON.parse(e.target.result);
                        if (data.settings) {
                            this.settings = { ...this.settings, ...data.settings };
                            this.saveSettings();
                            this.loadSettings();
                            
                            if (window.app) {
                                window.app.showNotification('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã', 'success');
                            }
                        }
                    } catch (error) {
                        console.error('–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
                        if (window.app) {
                            window.app.showNotification('–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫', 'error');
                        }
                    }
                };
                reader.readAsText(file);
            }
        };
        input.click();
    }

    resetSettings() {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é?')) {
            this.settings = {
                storageAdapter: 'local',
                imageSource: 'bricklink',
                theme: 'light',
                autoSave: true,
                gridSize: 'medium',
                notifications: true
            };
            
            this.saveSettings();
            this.loadSettings();
            
            if (window.app) {
                window.app.showNotification('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã', 'success');
            }
        }
    }

    clearAllData() {
        if (confirm('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —Å–±—Ä–æ—Å–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é:\n\n‚Ä¢ –í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –∏—Ö —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã\n‚Ä¢ –í—Å–µ –¥–µ—Ç–∞–ª–∏ –≤ –∫—É—á–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã\n‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—Å—è—Ç—Å—è –∫ —É–º–æ–ª—á–∞–Ω–∏—é\n‚Ä¢ –ë—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã\n\n–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?')) {
            try {
                // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                const mockData = new MockData();
                
                // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                const resetProject = {
                    containers: mockData.getContainers(),
                    pileItems: mockData.getPileItems(),
                    settings: {
                        storageAdapter: 'local',
                        imageSource: 'bricklink',
                        theme: 'light'
                    },
                    createdAt: new Date().toISOString(),
                    updatedAt: new Date().toISOString(),
                    version: '1.0',
                    resetAt: new Date().toISOString() // –ú–∞—Ä–∫–µ—Ä —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —Å–±—Ä–æ—à–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
                };

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–µ–∫—Ç —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                localStorage.setItem('lego-storage-project', JSON.stringify(resetProject));

                // –û—á–∏—â–∞–µ–º –¥—Ä—É–≥–∏–µ –∫–ª—é—á–∏ localStorage, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º  
                const keysToRemove = [];
                for (let i = 0; i < localStorage.length; i++) {
                    const key = localStorage.key(i);
                    if (key && key !== 'lego-storage-project' && (
                        key.startsWith('lego-storage') || 
                        key.includes('lego')
                    )) {
                        keysToRemove.push(key);
                    }
                }

                // –£–¥–∞–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–ª—é—á–∏ (–Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–µ–∫—Ç)
                keysToRemove.forEach(key => {
                    localStorage.removeItem(key);
                });

                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º
                this.settings = {
                    storageAdapter: 'local',
                    imageSource: 'bricklink',
                    theme: 'light',
                    autoSave: true,
                    gridSize: 'medium',
                    notifications: true
                };
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                localStorage.setItem('lego-storage-settings', JSON.stringify(this.settings));
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
                if (window.app) {
                    window.app.showNotification('–î–∞–Ω–Ω—ã–µ —Å–±—Ä–æ—à–µ–Ω—ã –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é', 'success');
                }

                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                setTimeout(() => {
                    window.location.reload();
                }, 1500);

            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –¥–∞–Ω–Ω—ã—Ö:', error);
                if (window.app) {
                    window.app.showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –¥–∞–Ω–Ω—ã—Ö', 'error');
                }
            }
        }
    }
}
